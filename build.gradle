plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.0'
	id 'io.spring.dependency-management' version '1.1.5'
}

group = 'org.senju'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}

	all {
		exclude group: 'commons-logging', module: 'commons-logging'
	}
}

repositories {
	mavenCentral()
}

ext {
	versions = [
			jjwt: '0.12.5',
			twilio: '10.3.0',
			mapstruct: '1.5.5.Final',
			firebase: '9.3.0',
			springdoc_openapi: '2.6.0'
	]
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'

	implementation "io.jsonwebtoken:jjwt-api:${versions.jjwt}"
	runtimeOnly "io.jsonwebtoken:jjwt-impl:${versions.jjwt}"
	runtimeOnly "io.jsonwebtoken:jjwt-jackson:${versions.jjwt}"

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	implementation "org.mapstruct:mapstruct:${versions.mapstruct}"
	annotationProcessor "org.mapstruct:mapstruct-processor:${versions.mapstruct}"
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.17.1'

	runtimeOnly 'org.postgresql:postgresql'
	implementation "com.twilio.sdk:twilio:${versions.twilio}"
	implementation "com.google.firebase:firebase-admin:${versions.firebase}"
	implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:${versions.springdoc_openapi}"


	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}
